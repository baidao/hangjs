%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.2 (Build 13C1021) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 62 51
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 62 51
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.3611 0.2118 0.0535 0.4046 0.6783 0.1088 0.1848 0.1099 0.9268 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.18000001 0.80000001 0.44299999 sc
q
41.163101 13.4058 m
41.426102 18.212799 41.8941 21.7908 49.143101 21.487801 c
49.407101 21.4758 49.6511 21.458799 49.8801 21.4368 c
50.257099 23.188801 50.476101 24.9328 50.536098 26.6168 c
50.9641 38.555801 40.9231 48.393799 30.0571 50.5658 c
17.6931 53.040798 5.2680998 43.587799 1.7961 32.903801 c
-2.7959001 18.7728 4.8431001 2.5248001 23.8181 0.68879998 c
31.3351 -0.0392 37.2341 2.3787999 41.558102 6.3378 c
41.266102 8.4267998 41.031101 11.0018 41.163101 13.4058 c
W*
0 0 62 51 rc
-4.5028958 55.963829 m
55.549309 55.963829 l
55.549309 -4.4401503 l
-4.5028958 -4.4401503 l
h
-4.5028958 55.963829 m
f*
Q
1 1 1 sc
q
28.0229 37.005402 m
28.0229 37.601398 28.2829 37.898399 28.805901 37.898399 c
30.537901 37.898399 l
31.114901 37.898399 31.4039 37.620399 31.4039 37.060398 c
31.4039 35.0214 l
31.4039 34.554401 31.627899 34.323399 32.074902 34.323399 c
36.684898 34.323399 l
37.262901 34.323399 37.551899 34.0424 37.551899 33.484402 c
37.551899 32.058399 l
37.551899 31.482401 37.2719 31.193399 36.713902 31.193399 c
23.1889 31.193399 l
22.610901 31.193399 22.321899 31.472401 22.321899 32.030399 c
22.321899 33.456402 l
22.321899 34.032398 22.600901 34.323399 23.159901 34.323399 c
27.3249 34.323399 l
27.7899 34.323399 28.0229 34.546398 28.0229 34.993401 c
28.0229 37.005402 l
h
24.6689 28.034401 m
24.6689 28.6304 24.929899 28.929399 25.4519 28.929399 c
33.555901 28.929399 l
34.1329 28.929399 34.422901 28.6504 34.422901 28.0914 c
34.422901 16.2414 l
34.439899 15.7764 34.616901 15.5344 34.9529 15.5154 c
35.045898 15.6094 35.110901 15.9354 35.1479 16.493401 c
35.185902 16.9034 35.194901 17.3414 35.176899 17.808399 c
35.176899 18.3664 35.455898 18.5154 36.0149 18.2554 c
37.439899 17.5284 l
38.016899 17.2304 38.295898 16.802401 38.277901 16.2414 c
38.221901 14.7344 37.830898 13.6344 37.1049 12.9444 c
36.172901 12.5174 34.9529 12.4154 33.443901 12.6384 c
32.2519 12.6934 31.5439 13.3084 31.319901 14.4824 c
31.2449 14.8184 31.1989 15.1614 31.180901 15.5154 c
31.180901 25.155399 l
31.180901 25.6224 30.9569 25.8554 30.509899 25.8554 c
28.5249 25.8554 l
28.0599 25.8554 27.8269 25.632401 27.8269 25.1854 c
27.8269 20.378401 l
27.7719 18.6654 27.5019 17.173401 27.0159 15.9074 c
26.662901 14.9564 26.047899 14.0074 25.1719 13.0584 c
24.5019 12.4054 23.923901 12.3414 23.439899 12.8604 c
23.2159 13.1404 22.9559 13.4294 22.6569 13.7284 c
22.1359 14.3064 22.116899 14.8644 22.600901 15.4034 c
23.960899 17.249399 24.6509 19.493401 24.6689 22.138399 c
24.6689 28.034401 l
h
15.8679 37.005402 m
15.8679 37.601398 16.127899 37.898399 16.6499 37.898399 c
18.130899 37.898399 l
18.707899 37.898399 18.9979 37.620399 18.9979 37.060398 c
18.9979 34.0154 l
18.9979 33.548401 19.221901 33.316399 19.6679 33.316399 c
21.0089 33.316399 l
21.585899 33.316399 21.8759 33.0364 21.8759 32.478401 c
21.8759 31.163401 l
21.8759 30.5874 21.5959 30.298401 21.0369 30.298401 c
19.6959 30.298401 l
19.2299 30.298401 18.9979 30.066401 18.9979 29.5994 c
18.9979 29.134399 19.2759 28.6504 19.835899 28.1464 c
21.8759 26.191401 l
22.3969 25.632401 22.461901 25.0714 22.0709 24.513399 c
21.7729 24.1224 21.5019 23.732401 21.259899 23.339399 c
20.8689 22.780399 20.4589 22.8004 20.030899 23.3964 c
19.527901 24.1224 l
19.173901 24.607401 18.9979 24.6264 18.9979 24.179399 c
18.9979 12.9444 l
18.9979 12.3684 18.717899 12.0794 18.158899 12.0794 c
16.7339 12.0794 l
16.155899 12.0794 15.8679 12.3594 15.8679 12.9174 c
15.8679 21.6364 l
15.8679 22.2694 15.7359 22.2784 15.4769 21.663401 c
15.2149 21.0114 14.9079 20.3314 14.5539 19.624399 c
14.2369 19.0264 13.8559 18.989401 13.4089 19.5114 c
12.9619 20.0714 l
12.4389 20.704399 12.3559 21.3274 12.7099 21.9424 c
13.9199 24.364401 14.9079 26.898399 15.6719 29.544399 c
15.8209 30.0464 15.6809 30.298401 15.2529 30.298401 c
13.5759 30.298401 l
12.9989 30.298401 12.7099 30.5774 12.7099 31.1364 c
12.7099 32.450401 l
12.7099 33.026402 12.9889 33.316399 13.5479 33.316399 c
15.1689 33.316399 l
15.6339 33.316399 15.8679 33.540401 15.8679 33.9874 c
15.8679 37.005402 l
h
15.8679 37.005402 m
W*
0 0 62 51 rc
7.4950256 42.898399 m
43.278717 42.898399 l
43.278717 7.0794001 l
7.4950256 7.0794001 l
h
7.4950256 42.898399 m
f*
Q
0.94499999 0.76899999 0.059 sc
q
60.8857 8.5464001 m
60.381699 7.5384002 59.447701 5.1914001 57.147701 4.3274002 c
54.846699 3.4663999 48.340698 3.2883999 46.751701 3.2883999 c
44.7827 3.2883999 42.925701 4.6654 42.2897 6.8193998 c
41.715698 8.7714005 41.812698 15.5874 42.2897 17.173401 c
42.766701 18.757401 44.303699 20.3354 45.741699 20.6224 c
47.178699 20.909401 52.512699 20.583401 54.942699 20.1014 c
58.106701 19.472401 59.111698 17.603399 60.117699 16.0214 c
61.125702 14.4414 61.388699 9.5523996 60.8857 8.5464001 c
W*
0 0 62 51 rc
36.894741 25.729977 m
66.134171 25.729977 l
66.134171 -1.7115999 l
36.894741 -1.7115999 l
h
36.894741 25.729977 m
f*
Q
0.133 0.133 0.133 sc
q
49.692402 15.8179 m
49.692402 10.4349 l
49.692402 10.0559 49.637402 9.7339001 49.5284 9.4679003 c
49.419399 9.2009001 49.274399 8.9799004 49.089401 8.8079004 c
48.906399 8.6358995 48.691399 8.5108995 48.4464 8.4329004 c
48.199402 8.3549004 47.942402 8.3139 47.671398 8.3139 c
47.4114 8.3139 47.162399 8.3549004 46.921398 8.4349003 c
46.680401 8.5149002 46.4674 8.6358995 46.282398 8.7979002 c
46.097401 8.9609003 45.949402 9.1578999 45.838402 9.3938999 c
45.727402 9.6318998 45.671398 9.9078999 45.671398 10.2239 c
45.671398 10.7889 l
46.456402 10.7889 l
46.456402 10.3159 l
46.456402 10.0889 46.493401 9.8938999 46.567402 9.7258997 c
46.642399 9.5599003 46.7374 9.4229002 46.8564 9.3158998 c
46.9744 9.2068996 47.1064 9.1288996 47.253399 9.0759001 c
47.401402 9.0249004 47.546398 8.9998999 47.692402 8.9998999 c
47.810398 8.9998999 47.9394 9.0208998 48.080399 9.0658998 c
48.219398 9.1108999 48.351398 9.1849003 48.4744 9.2868996 c
48.596401 9.3899002 48.700401 9.5269003 48.783401 9.6989002 c
48.866402 9.8709002 48.907398 10.0839 48.907398 10.3379 c
48.907398 15.8179 l
49.692402 15.8179 l
h
49.692402 15.8179 m
W*
0 0 62 51 rc
40.671398 20.8179 m
54.692402 20.8179 l
54.692402 3.3139 l
40.671398 3.3139 l
h
40.671398 20.8179 m
f*
Q
q
47.671902 7.7964001 m
47.356899 7.7964001 47.048901 7.8474002 46.755901 7.9443998 c
46.450901 8.0464001 46.176899 8.2024002 45.941898 8.4094 c
45.7029 8.6163998 45.510899 8.8744001 45.3689 9.1753998 c
45.226898 9.4804001 45.1539 9.8333998 45.1539 10.2244 c
45.1539 10.7884 l
45.1539 11.0754 45.385899 11.3084 45.671902 11.3084 c
46.455898 11.3084 l
46.741901 11.3084 46.9739 11.0754 46.9739 10.7884 c
46.9739 10.3164 l
46.9739 10.1634 46.995899 10.0364 47.040901 9.9373999 c
47.085899 9.8374004 47.1399 9.7573996 47.207901 9.6963997 c
47.2719 9.6364002 47.342899 9.5934 47.4249 9.5643997 c
47.581902 9.5094004 47.713902 9.4913998 47.922901 9.5604 c
47.997898 9.5833998 48.0709 9.6244001 48.1409 9.6854 c
48.2089 9.7393999 48.266899 9.8193998 48.317902 9.9233999 c
48.365898 10.0234 48.3899 10.1654 48.3899 10.3374 c
48.3899 15.8174 l
48.3899 16.103399 48.622898 16.3354 48.907902 16.3354 c
49.691898 16.3354 l
49.977901 16.3354 50.2099 16.103399 50.2099 15.8174 c
50.2099 10.4354 l
50.2099 9.9913998 50.142899 9.6014004 50.0079 9.2714005 c
49.871899 8.9354 49.680901 8.6513996 49.442902 8.4314003 c
49.206902 8.2083998 48.923901 8.0424004 48.6059 7.9414001 c
48.3069 7.8453999 47.992901 7.7964001 47.671902 7.7964001 c
W*
0 0 62 51 rc
40.1539 21.3354 m
55.2099 21.3354 l
55.2099 2.7964001 l
40.1539 2.7964001 l
h
40.1539 21.3354 m
f*
Q
q
52.667999 10.0913 m
52.685001 9.8452997 52.741001 9.6203003 52.837002 9.4153004 c
52.932999 9.2103004 53.060001 9.0323 53.217999 8.8823004 c
53.376999 8.7322998 53.563999 8.6142998 53.779999 8.5303001 c
53.997002 8.4462996 54.236 8.4053001 54.497002 8.4053001 c
54.729 8.4053001 54.949001 8.4313002 55.161999 8.4802999 c
55.374001 8.5303001 55.560001 8.6113005 55.721001 8.7202997 c
55.882 8.8292999 56.011002 8.9722996 56.106998 9.1463003 c
56.203999 9.3212996 56.251999 9.5342999 56.251999 9.7842999 c
56.251999 9.9892998 56.200001 10.1613 56.095001 10.3043 c
55.991001 10.4463 55.855 10.5703 55.685001 10.6753 c
55.515999 10.7783 55.321999 10.8683 55.105 10.9433 c
54.888 11.0173 54.668999 11.0893 54.448002 11.1553 c
54.169998 11.2363 53.893002 11.3273 53.613998 11.4273 c
53.335999 11.5283 53.084999 11.6553 52.861 11.8103 c
52.638 11.9643 52.457001 12.1573 52.316002 12.3883 c
52.175999 12.6203 52.105999 12.9053 52.105999 13.2493 c
52.105999 13.5323 52.161999 13.7843 52.275002 14.0013 c
52.387001 14.2203 52.544998 14.4033 52.749001 14.5503 c
52.952 14.7003 53.195 14.8123 53.478001 14.8883 c
53.758999 14.9643 54.069 15.0013 54.409 15.0013 c
54.709 15.0013 54.973999 14.9723 55.206001 14.9133 c
55.437 14.8533 55.639999 14.7733 55.813999 14.6693 c
55.987999 14.5683 56.134998 14.4503 56.254002 14.3163 c
56.373001 14.1833 56.471001 14.0383 56.547001 13.8883 c
56.624001 13.7363 56.681 13.5793 56.719002 13.4213 c
56.756001 13.2613 56.779999 13.1073 56.790001 12.9583 c
56.030998 12.9583 l
56.012001 13.1873 55.956001 13.3883 55.866001 13.5643 c
55.773998 13.7373 55.655998 13.8843 55.511002 14.0013 c
55.366001 14.1183 55.199001 14.2083 55.009998 14.2673 c
54.820999 14.3273 54.619999 14.3573 54.409 14.3573 c
54.216 14.3573 54.026001 14.3393 53.839001 14.3003 c
53.652 14.2613 53.485001 14.1963 53.338001 14.1073 c
53.191002 14.0193 53.071999 13.9043 52.980999 13.7633 c
52.889999 13.6243 52.845001 13.4523 52.845001 13.2493 c
52.845001 13.0383 52.896 12.8613 52.998001 12.7143 c
53.101002 12.5663 53.237 12.4413 53.409 12.3353 c
53.580002 12.2303 53.776001 12.1403 53.995998 12.0623 c
54.215 11.9843 54.443001 11.9093 54.678001 11.8393 c
54.959 11.7553 55.236 11.6633 55.513 11.5643 c
55.791 11.4643 56.037998 11.3373 56.257 11.1853 c
56.474998 11.0323 56.651001 10.8453 56.786999 10.6203 c
56.922001 10.3963 56.990002 10.1183 56.990002 9.7842999 c
56.990002 9.4503002 56.928001 9.1553001 56.804001 8.9022999 c
56.68 8.6483002 56.507 8.4372997 56.285999 8.2652998 c
56.063999 8.0952997 55.800999 7.9663 55.495998 7.8803 c
55.191002 7.7943001 54.859001 7.7512999 54.497002 7.7512999 c
54.169998 7.7512999 53.855 7.8063002 53.548 7.9133 c
53.242001 8.0233002 52.969002 8.1793003 52.73 8.3823004 c
52.490002 8.5853004 52.294998 8.8312998 52.146 9.1203003 c
51.994999 9.4092999 51.916 9.7322998 51.904999 10.0913 c
52.667999 10.0913 l
h
52.667999 10.0913 m
W*
0 0 62 51 rc
46.904999 20.001301 m
61.990002 20.001301 l
61.990002 2.7513001 l
46.904999 2.7513001 l
h
46.904999 20.001301 m
f*
Q
q
54.497101 7.2339001 m
54.114101 7.2339001 53.738098 7.2979002 53.376099 7.4249001 c
53.011101 7.5538998 52.681099 7.7438998 52.3951 7.9878998 c
52.1031 8.2339001 51.8661 8.5348997 51.6861 8.8799 c
51.500099 9.2378998 51.400101 9.6399002 51.3881 10.0759 c
51.385101 10.2159 51.437099 10.3509 51.5341 10.4509 c
51.632099 10.5519 51.766102 10.6089 51.905102 10.6089 c
52.668098 10.6089 l
52.940102 10.6089 53.1661 10.3959 53.185101 10.1249 c
53.196098 9.9428997 53.236099 9.7828999 53.306099 9.6358995 c
53.375099 9.4878998 53.4631 9.3648996 53.5751 9.2568998 c
53.685101 9.1539001 53.813099 9.0739002 53.967098 9.0149002 c
54.273102 8.8958998 54.694099 8.9019003 55.043098 8.9839001 c
55.191101 9.0188999 55.321098 9.0739002 55.430099 9.1478996 c
55.525101 9.2129002 55.597099 9.2929001 55.654099 9.3958998 c
55.7071 9.4919004 55.7341 9.6248999 55.7341 9.7848997 c
55.7341 9.9078999 55.702099 9.9638996 55.678101 9.9979 c
55.612099 10.0879 55.525101 10.1639 55.412102 10.2339 c
55.2761 10.3179 55.1161 10.3919 54.937099 10.4529 c
54.726101 10.5249 54.5121 10.5949 54.296101 10.6619 c
54.016102 10.7439 53.729099 10.8379 53.440102 10.9409 c
53.118099 11.0559 52.8251 11.2049 52.566101 11.3839 c
52.2831 11.5819 52.051102 11.8299 51.8741 12.1209 c
51.685101 12.4329 51.5881 12.8119 51.5881 13.2499 c
51.5881 13.6149 51.6651 13.9489 51.815102 14.2399 c
51.965099 14.5289 52.176102 14.7749 52.445099 14.9699 c
52.697102 15.1539 53.000099 15.2969 53.343102 15.3879 c
53.955101 15.5519 54.757099 15.5619 55.335098 15.4139 c
55.612099 15.3409 55.861099 15.2419 56.0751 15.1169 c
56.2971 14.9879 56.487099 14.8339 56.641102 14.6599 c
56.789101 14.4959 56.913101 14.3139 57.009102 14.1209 c
57.1031 13.9329 57.175098 13.7379 57.222099 13.5389 c
57.267101 13.3509 57.295101 13.1679 57.306099 12.9899 c
57.315102 12.8489 57.264099 12.7089 57.1661 12.6029 c
57.069099 12.4999 56.933102 12.4409 56.789101 12.4409 c
56.031101 12.4409 l
55.7631 12.4409 55.539101 12.6459 55.516102 12.9139 c
55.502102 13.0739 55.466099 13.2129 55.406101 13.3239 c
55.348099 13.4349 55.275101 13.5269 55.184101 13.6009 c
55.091099 13.6769 54.981098 13.7339 54.8531 13.7749 c
54.5811 13.8609 54.247101 13.8549 53.9431 13.7929 c
53.815102 13.7669 53.702099 13.7239 53.606098 13.6659 c
53.5261 13.6169 53.4631 13.5559 53.414101 13.4819 c
53.379101 13.4289 53.362099 13.3489 53.362099 13.2499 c
53.362099 13.1459 53.382099 13.0679 53.4231 13.0109 c
53.4851 12.9209 53.569099 12.8429 53.680099 12.7769 c
53.819099 12.6929 53.983101 12.6149 54.168098 12.5499 c
54.3801 12.4739 54.601101 12.4039 54.828098 12.3359 c
55.115101 12.2499 55.403099 12.1539 55.689098 12.0499 c
56.0061 11.9369 56.2971 11.7889 56.551102 11.6109 c
56.829102 11.4179 57.057098 11.1749 57.229099 10.8879 c
57.4151 10.5819 57.508099 10.2109 57.508099 9.7848997 c
57.508099 9.3729 57.427101 8.9979 57.2691 8.6749001 c
57.111099 8.3508997 56.886101 8.0759001 56.6021 7.8548999 c
56.328098 7.6438999 56.004101 7.4839001 55.636101 7.3818998 c
55.286098 7.2828999 54.9021 7.2339001 54.497101 7.2339001 c
W*
0 0 62 51 rc
46.387978 20.51829 m
62.508099 20.51829 l
62.508099 2.2339001 l
46.387978 2.2339001 l
h
46.387978 20.51829 m
f*
ep
end
